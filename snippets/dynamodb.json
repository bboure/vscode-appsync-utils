{
  "GetItemRequest": {
    "prefix": "GetItemRequest",
    "body": [
      "{",
      "    \"version\": \"2018-05-29\",",
      "    \"operation\": \"GetItem\",",
      "    \"key\": {",
      "      \"PK\": \\$util.dynamodb.toDynamoDBJson(\"${1}#${2:\\${ctx.args.id\\}}\"),",
      "      \"SK\": \\$util.dynamodb.toDynamoDBJson(\"${3:${1}}#${4:${2}}\")",
      "    }",
      "}"
    ]
  },
  "QueryRequest": {
    "prefix": "QueryRequest",
    "body": [
      "{",
      "  \"version\": \"2018-05-29\",",
      "  \"operation\": \"Query\",",
      "  ${100:\"index\": \"${1}\",}",
      "  \"limit\": \\$util.defaultIfNull(\\${ctx.args.limit}, ${10:10}),",
      "  \"scanIndexForward\": ${20:true},",
      "  \"query\": {",
      "    \"expression\": \"#PK = :PK and begins_with(#SK, :SK)\",",
      "    \"expressionNames\": {",
      "      \"#PK\": \"${1}PK\",",
      "      \"#SK\": \"${1}SK\"",
      "    },",
      "    \"expressionValues\": {",
      "      \":PK\": \\$util.dynamodb.toStringJson(\"${2}#${3}\"),",
      "      \":SK\": \\$util.dynamodb.toStringJson(\"${4}#${5}\")",
      "    }",
      "  }",
      "}"
    ]
  },
  "Response": {
    "prefix": "Response",
    "body": ["\\$util.toJson(\\$ctx.result)"]
  },
  "ConditionalCheckResponse": {
    "prefix": "ConditionalCheckResponse",
    "body": [
      "#if(\\$ctx.error)",
      "  #if(\\$ctx.error.type == \"DynamoDB:ConditionalCheckFailedException\")",
      "    ${1:\\$util.unauthorized()}",
      "  #else",
      "    \\$util.error(\"Internal Error\", \"InternalError\")",
      "  #end",
      "#else",
      "  ${2:\\$util.toJson(\\$ctx.result)}",
      "#end"
    ]
  },
  "TransactionResponse": {
    "prefix": "TransactionResponse",
    "body": [
      "#if(\\$ctx.error)",
      "  #if(\\$ctx.error.type == \"DynamoDB:TransactionCanceledException\")",
      "    ${1:false}",
      "  #else",
      "    \\$util.error(\"Internal Error\", \"InternalError\")",
      "  #end",
      "#else",
      "  ${2:true}",
      "#end"
    ]
  },
  "GetItemSingleTableRequest": {
    "prefix": "GetItemSingleTableRequest",
    "body": [
      "#set(\\$expression=\"#PK = :PK\")",
      "#set(\\$expressionNames={\"#PK\": \"${1}PK\"})",
      "#set(\\$expressionValues={\":PK\": \\$util.dynamodb.toDynamoDB(\"${2}#${3:\\${context.args.id\\}}\")})",
      "#if(!\\$ctx.info.selectionSetList.contains(\"${6}\"))",
      "  #set(\\$expression=\\$expression + \" and #SK = :SK\")",
      "  \\$util.qr(\\$expressionNames.put(\"#SK\", \"${1}SK\"))",
      "  \\$util.qr(\\$expressionValues.put(\":SK\", \\$util.dynamodb.toDynamoDB(\"${4:${2}}#${5:${3}}\")))",
      "#end",
      "{",
      "    \"version\": \"2018-05-29\",",
      "    \"operation\": \"Query\",",
      "    ${100:\"index\": \"${1}\",}",
      "    \"query\": {",
      "      \"expression\": \"\\$expression\",",
      "      \"expressionNames\": \\$util.toJson(\\$expressionNames),",
      "      \"expressionValues\": \\$util.toJson(\\$expressionValues)",
      "    }",
      "}"
    ]
  },
  "GetItemSingleTableResponse": {
    "prefix": "GetItemSingleTableResponse",
    "body": [
      "#set(\\$result={})",
      "#foreach(\\$item in \\$context.result.items)",
      "  #if(\\$item.get(\"${10:type}\") == \"${1:parentType}\")",
      "    #set(\\$result=\\$item)",
      "    \\$util.qr(\\$result.put(\"${3:children}\", []))",
      "  #elseif(\\$item.get(\"${10:type}\") == \"${2:childType}\")",
      "    \\$util.qr(\\$result.${3:orders}.add(\\$item))",
      "  #end",
      "#end",
      "#if(\\$result.size() > 0)",
      "  \\$util.toJson(\\$result)",
      "#else",
      "  null",
      "#end"
    ]
  },
  "PutItemRequest": {
    "prefix": "PutItemRequest",
    "body": [
      "#set(\\$id=\\$util.autoId())",
      "#set(\\$attributeValues={})",
      "\\$util.qr(\\$attributeValues.put(\"id\", \\$util.dynamodb.toDynamoDB(\\$id)))",
      "\\$util.qr(\\$attributeValues.put(\"${3:type}\", \\$util.dynamodb.toDynamoDB(\"${2:Type}\")))",
      "#foreach(\\$item in \\$ctx.args.${1:input}.entrySet())",
      "  \\$util.qr(\\$attributeValues.put(\"\\${item.key}\", \\$util.dynamodb.toDynamoDB(\\$item.value)))",
      "#end",
      "{",
      "  \"version\": \"2018-05-29\",",
      "  \"operation\": \"PutItem\",",
      "  \"key\": {",
      "    \"PK\": \\$util.dynamodb.toDynamoDBJson(\"${4:ITEM}#${5:\\${id\\}}\"),",
      "    \"SK\": \\$util.dynamodb.toDynamoDBJson(\"${6:${4}}#${7:${5}}\")",
      "  },",
      "  \"attributeValues\": \\$util.toJson(\\$attributeValues)",
      "  \"condition\": {",
      "    \"expression\": \"attribute_not_exists(#PK)\",",
      "    \"expressionNames\": {",
      "      \"#PK\": \"${10:PK}\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "UpdateItemRequest": {
    "prefix": "UpdateItemRequest",
    "body": [
      "#set(\\$expressionValues={})",
      "#foreach(\\$item in \\$ctx.args.${1:input}.entrySet())",
      "  #set(\\$expression=\"\\${expression}, #\\${item.key} = :\\${item.key}\")",
      "  \\$util.qr(\\$expressionNames.put(\"#\\${item.key}\", \"\\${item.key}\"))",
      "  \\$util.qr(\\$expressionValues.put(\":\\${item.key}\", \\$util.dynamodb.toDynamoDB(\\$item.value)))",
      "#end",
      "{",
      "  \"version\": \"2018-05-29\",",
      "  \"operation\": \"UpdateItem\",",
      "  \"key\": {",
      "    \"PK\": \\$util.dynamodb.toStringJson(\"${2}#${3:\\${ctx.args.${1}.id\\}}\"),",
      "    \"SK\": \\$util.dynamodb.toStringJson(\"${4:${2}}#${5:\\${ctx.args.${1}.id\\}}\")",
      "  },",
      "  \"update\": {",
      "    \"expression\": \"\\$expression\",",
      "    \"expressionNames\": \\$util.toJson(\\$expressionNames),",
      "    \"expressionValues\": \\$util.toJson(\\$expressionValues)",
      "  },",
      "  \"condition\": {",
      "    \"expression\": \"#ownerId = :ownerId\",",
      "    \"expressionNames\": {",
      "      \"#ownerId\": \"${10:ownerId}\"",
      "    },",
      "    \"expressionValues\": {",
      "      \":ownerId\": \\$util.dynamodb.toDynamoDBJson(\"${20:\\${ctx.identity.sub\\}}\")",
      "    }",
      "  }",
      "}"
    ]
  },
  "DeleteItemRequest": {
    "prefix": "DeleteItemRequest",
    "body": [
      "{",
      "  \"version\": \"2018-05-29\",",
      "  \"operation\": \"DeleteItem\",",
      "  \"key\": {",
      "    \"PK\": \\$util.dynamodb.toStringJson(\"${1}#${2:\\${ctx.args.id\\}}\"),",
      "    \"SK\": \\$util.dynamodb.toStringJson(\"${3:${1}}#${4:${2}}\")",
      "  },",
      "  \"condition\": {",
      "    \"expression\": \"#ownerId = :ownerId\",",
      "    \"expressionNames\": {",
      "      \"#ownerId\": \"${5:ownerId}\"",
      "    },",
      "    \"expressionValues\": {",
      "      \":ownerId\": \\$util.dynamodb.toDynamoDBJson(\"${20:\\${ctx.identity.sub\\}}\")",
      "    }",
      "  }",
      "}"
    ]
  },
  "TransactWriteItems": {
    "prefix": "TransactWriteItems",
    "body": [
      "{",
      "  \"version\": \"2018-05-29\",",
      "  \"operation\": \"TransactWriteItems\",",
      "  \"transactItems\": [",
      "    {",
      "      \"table\": \"${1}\",",
      "      \"operation\": \"${10|PutItem,UpdateItem,DeleteItem,CheckCondition|}\",",
      "      \"key\": {",
      "        \"PK\": \\$util.dynamodb.toDynamoDBJson(\"${20}\"),",
      "        \"SK\": \\$util.dynamodb.toDynamoDBJson(\"${21:${20}}\")",
      "      }${30}",
      "    }${0}",
      "    ",
      "  ]",
      "}"
    ]
  }
}
